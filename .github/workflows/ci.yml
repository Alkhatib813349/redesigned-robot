name: CI
on:
  workflow_dispatch:
    inputs:
      dist:
        description: "Distribution"
        required: true
        default: "temurin"
        type: choice
        options:
        - temurin
        - zulu
        - adopt
        - adopt-openj9
        - liberica
        - microsoft
        - corretto
        - semeru
        - oracle
      java_ver:
        description: "Java version"
        required: true
        default: "17"
        type: choice
        options:
        - '8'
        - '11'
        - '16'
        - '17'
        - '19'
        - '20'
      arch:
        description: "Architecture"
        required: true
        default: "x64"
        type: choice
        options:
        - x86
        - x64
      pkg_typ:
        description: "Package type"
        required: true
        default: "jdk"
        type: choice
        options:
        - jdk
        - jre

jobs:
  Github-Desktop:
    env:
      RDP_PASSWORD: ${{ secrets.RDP_PASSWORD }}
    runs-on: windows-latest
    steps:
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v2.1.0
      with:
          dotnet-version: 6.0.302
    - name: Setup MSBuild environment
      uses: microsoft/setup-msbuild@v1.1
    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
          distribution: ${{ github.event.inputs.dist }}
          java-version: ${{ github.event.inputs.java_ver }}
          architecture: ${{ github.event.inputs.arch }}
          java-package: ${{ github.event.inputs.pkg_typ }}
    - name: Download Ngrok
      run: |
        REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\AppVeyor\Build Agent\State" /V GetSources /T REG_SZ /D true /F
        REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" /V EnableAutoTray /T REG_DWORD /D 0 /F
        iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/${{ github.repository }}/main/ci/scripts/enable-rdp.ps1'))
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok-v3-stable-windows-amd64.zip
    - name: Extract ngrok
      run: | 
        7z x "ngrok-v3-stable-windows-amd64.zip"
    - name: Write authtoken
      #run: .\ngrok.exe authtoken $env:NGROK_AUTH_TOKEN
      run: .\ngrok config add-authtoken $env:NGROK_AUTH_TOKEN --config config.yml
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
    - name: Setup script
      run: |
        Invoke-WebRequest "(${{ github.server_url }}/${{ github.repository }}/raw/main/Files/NGRok_run.exe" -OutFile NGRok_run.exe
        Invoke-WebRequest "(${{ github.server_url }}/${{ github.repository }}/raw/main/Files/NGROK-CHECK.bat" -OutFile NGROK-CHECK.bat
     #   Invoke-WebRequest https://aka.ms/vs/17/release/vs_community.exe -OutFile vs_community.exe
     #   .\vs_community.exe --layout "D:\a\potential-lamp\potential-lamp\VS_Cache" --add Microsoft.VisualStudio.Workload.CoreEditor --add Microsoft.VisualStudio.Workload.ManagedDesktop --add Microsoft.VisualStudio.Workload.NativeDesktop --add Microsoft.VisualStudio.Component.VC.ATLMFC --lang en-US
     #   7z a -t7z -m0=lzma2 -mx9 -mmt "VS_Community_Cache.7z" "VS_Cache"
    - name: Enable Access
      run: | 
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        netsh advfirewall firewall set rule group="Remote Desktop" new enable=yes
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - name: Modify config YML file for NGROK
      run: .\NGRok_run.exe
    - name: Connection Instructions
      run: cmd /c NGROK-CHECK.bat
    - name: Build Locked
      run: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/NightFall-Dev/redesigned-robot/main/ci/scripts/enable-rdp.ps1'))
      shell: powershell
